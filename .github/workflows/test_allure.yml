name: Run Tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt || true

      - name: Run tests
        run: |
          pytest --alluredir=allure-results || true
          echo "=== Allure results content ==="
          ls -la allure-results || echo "No allure-results found!"

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

#      - name: Copy Allure history from gh-pages
#        run: |
#          mkdir -p allure-history
#          cp -r gh-pages/allure-report/history allure-history || true

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          allure_history: allure-history
          keep_reports: 10
          allure_report: allure-report

      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: allure_history
          publish_branch: gh-pages

      - name: Notify Telegram
        if: always()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -F text="âœ… *Allure report is ready!*\nðŸ”— [Open report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-report)"
